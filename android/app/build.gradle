apply plugin: "com.android.application"

import com.android.build.OutputFile

project.ext.react = [
    entryFile: "index.js",
    enableHermes: false,
]

apply from: "../../node_modules/react-native/react.gradle"

def enableHermes = project.ext.react.get("enableHermes", false);
def enableProguardInReleaseBuilds = false
def enableSeparateBuildPerCPUArchitecture = false
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    ndkVersion rootProject.ext.ndkVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId APPID
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1050203
        versionName "1.5.2-indev.3"
        resValue "string", "app_name", "${APPNAME}"
        manifestPlaceholders = [ applicationName: APPNAME ]
        multiDexEnabled true
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
     buildTypes {
        /*debug {
        }*/
        release {
        }
    }
    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // https://developer.android.com/studio/build/configure-apk-splits.html
            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)
            }

        }
    }
    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libjsc.so'
        pickFirst 'lib/arm64-v8a/libjsc.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // Hermes debugger
    if (enableHermes) {
        def hermesPath = "../../node_modules/hermes-engine/android/";
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
    } else {
        implementation jscFlavor
    }
    // react-native
    implementation "com.facebook.react:react-native:0.64.2"
    // Flipper
    debugImplementation("com.facebook.flipper:flipper:${rootProject.ext.flipperVersion}") {
        exclude group:'com.facebook.fbjni'
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${rootProject.ext.flipperVersion}") {
        exclude group:'com.facebook.flipper'
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${rootProject.ext.flipperVersion}") {
        exclude group:'com.facebook.flipper'
    }
    debugImplementation ("com.facebook.flipper:flipper-leakcanary-plugin:${rootProject.ext.flipperVersion}") {
        exclude group:'com.facebook.flipper'
    }
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.facebook.soloader:soloader:0.10.1'
    releaseImplementation ("com.facebook.flipper:flipper-noop:${flipperVersion}")
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // react-native packages
    implementation project(':react-native-action-sheet')
    implementation project(':react-native-matomo')
    // Others
    // implementation "androidx.swipeRefreshlayout:swiperefreshlayout:1.1.0"
    implementation "com.fasterxml.jackson.core:jackson-core:2.11.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"
    implementation "com.google.android.gms:play-services-base:17.6.0"
}

task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
apply plugin: 'com.google.gms.google-services'
