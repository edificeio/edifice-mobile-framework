
def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'appe' do

  config = use_native_modules!
  $RNFirebaseAsStaticFramework = true

  #
  # Static libraries => use modular headers
  #
  pod 'Firebase', :modular_headers => true
  pod 'FirebaseABTesting', :modular_headers => true
  pod 'FirebaseAppDistribution', :modular_headers => true
  pod 'FirebaseCrashlytics', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'nanopb', :modular_headers => true

  #
  # Zendesk stuff
  #
  pod 'ZendeskAnswerBotSDK'
  pod 'ZendeskChatSDK'
  pod 'ZendeskSupportSDK'

  #
  # react-native-permissions : @see: https://github.com/zoontek/react-native-permissions#ios
  #
  setup_permissions([
    # 'AppTrackingTransparency',
    # 'Bluetooth',
    # 'Calendars',
    # 'CalendarsWriteOnly',
    'Camera',
    # 'Contacts',
    # 'FaceID',
    # 'LocationAccuracy',
    # 'LocationAlways',
    # 'LocationWhenInUse',
    # 'MediaLibrary',
    # 'Microphone',
    # 'Motion',
    'Notifications',
    'PhotoLibrary',
    'PhotoLibraryAddOnly',
    # 'Reminders',
    # 'Siri',
    # 'SpeechRecognition',
    # 'StoreKit',
  ])

  #
  # react-native-text-sizze not added automatically
  #
  pod 'RNTextSize', :path => "../node_modules/react-native-text-size/ios"

  #
  # React Native Stuff
  #
  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
  #   bitcode_strip_path = `xcrun --find bitcode_strip`.chop!
  #  def strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
  #    framework_path = File.join(Dir.pwd, framework_relative_path)
  #    command = "#{bitcode_strip_path} #{framework_path} -r -o #{framework_path}"
  #    puts "Stripping bitcode: #{command}"
  #    system(command)
  #  end
  #  framework_paths = [
  #    "Pods/ZendeskSDKConfigurationsSDK/SDKConfigurations.xcframework/ios-arm64/SDKConfigurations.framework/SDKConfigurations"
  #  ]
  #  framework_paths.each do |framework_relative_path|
  #    strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
  #  end
  end

end
