name: Auto-Merge phrase-translations

on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  status: {}

jobs:
  auto-merge:
    name: Auto-Merge phrase-translations
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Check if source branch is phrase-translations
        run: |
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            echo "This action is only applicable to pull requests."
            exit 1
          fi

          if [ "${{ github.event.pull_request.head.ref }}" != "phrase-translations" ]; then
            echo "Source branch is not phrase-translations. Skipping auto-merge."
            exit 0
          fi

      - name: Pull latest changes from the remote repository
        run: git pull origin phrase-translations

      - name: Auto-Merge PR
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin pull/${{ github.event.pull_request.number }}/merge
          git merge FETCH_HEAD --no-edit -m "Auto-merge pull request #${{ github.event.pull_request.number }}"
          git push origin HEAD:refs/heads/${{ github.event.pull_request.base.ref }}

      - name: Send Slack notification on failure
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          BASE_BRANCHES: 'phrase-translations'
          MERGE_METHOD: 'squash'
          MERGE_REQUIRED_APPROVALS: '0'
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_MONITOR_MOBILE_URL }}
          LOG: 'TRACE'
