diff --git a/node_modules/react-native-dropdown-picker/src/components/Picker.js b/node_modules/react-native-dropdown-picker/src/components/Picker.js
<<<<<<<< HEAD:patches/react-native-dropdown-picker+5.4.3.patch
index 0b06940..4610a77 100644
========
index c769683..ad57360 100644
>>>>>>>> release/1.9.3:patches/react-native-dropdown-picker+5.4.4.patch
--- a/node_modules/react-native-dropdown-picker/src/components/Picker.js
+++ b/node_modules/react-native-dropdown-picker/src/components/Picker.js
@@ -41,7 +41,8 @@ import {
     GET_DROPDOWN_DIRECTION,
     LANGUAGE,
     RTL_DIRECTION,
-    RTL_STYLE
+    RTL_STYLE,
+    ARROW_ICON_POSITION,
 } from '../constants';
 import THEMES from '../themes';
 import RenderBadgeItem from './RenderBadgeItem';
<<<<<<<< HEAD:patches/react-native-dropdown-picker+5.4.3.patch
@@ -160,7 +161,8 @@ function Picker({
========
@@ -162,7 +163,8 @@ function Picker({
>>>>>>>> release/1.9.3:patches/react-native-dropdown-picker+5.4.4.patch
     testID,
     closeOnBackPressed = false,
     extendableBadgeContainer = false,
-    onSelectItem = (item) => {}
+    onSelectItem = (item) => {},
+    arrowIconPosition = ARROW_ICON_POSITION.RIGHT
 }) {
     const [necessaryItems, setNecessaryItems] = useState([]);
     const [searchText, setSearchText] = useState('');
<<<<<<<< HEAD:patches/react-native-dropdown-picker+5.4.3.patch
@@ -185,7 +187,7 @@ function Picker({
========
@@ -187,7 +189,7 @@ function Picker({
>>>>>>>> release/1.9.3:patches/react-native-dropdown-picker+5.4.4.patch
      * The item schema.
      * @returns {object}
      */
-     const _schema = useMemo(() => ({...SCHEMA, ...schema}), [schema]);
+    const _schema = useMemo(() => ({...SCHEMA, ...schema}), [schema]);
 
     /**
      * componentDidMount.
<<<<<<<< HEAD:patches/react-native-dropdown-picker+5.4.3.patch
@@ -1799,11 +1801,22 @@ function Picker({
========
@@ -1807,11 +1809,22 @@ function Picker({
>>>>>>>> release/1.9.3:patches/react-native-dropdown-picker+5.4.4.patch
      */
     const pointerEvents = useMemo(() => disabled ? "none" : "auto", [disabled]);
 
+    /**
+     * The top component.
+     * @returns {JSX.Element}
+     */
+    const TopComponent = useMemo(() => {
+        switch (arrowIconPosition) {
+            case ARROW_ICON_POSITION.LEFT: return [_ArrowComponent, _BodyComponent];
+            case ARROW_ICON_POSITION.RIGHT: return [_BodyComponent, _ArrowComponent];
+            default: //
+        }
+    }, [arrowIconPosition, _ArrowComponent, _BodyComponent]);
+
     return (
         <View style={_containerStyle} {...containerProps}>
             <TouchableOpacity style={_style} onPress={__onPress} onLayout={__onLayout} {...props} ref={onRef} pointerEvents={pointerEvents} disabled={disabled} testID={testID}>
-                {_BodyComponent}
-                {_ArrowComponent}
+              {TopComponent}
             </TouchableOpacity>
             {DropDownBodyComponent}
         </View>
diff --git a/node_modules/react-native-dropdown-picker/src/constants/index.js b/node_modules/react-native-dropdown-picker/src/constants/index.js
index f4e9c76..22456af 100644
--- a/node_modules/react-native-dropdown-picker/src/constants/index.js
+++ b/node_modules/react-native-dropdown-picker/src/constants/index.js
@@ -134,3 +134,5 @@ export const ASCII_CODE = (str) => {
 
     return chr;
 }
+
+export const ARROW_ICON_POSITION = { LEFT: 'LEFT', RIGHT: 'RIGHT' };
\ No newline at end of file
