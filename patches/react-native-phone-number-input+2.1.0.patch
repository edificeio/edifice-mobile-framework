diff --git a/node_modules/react-native-phone-number-input/.DS_Store b/node_modules/react-native-phone-number-input/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-phone-number-input/lib/index.d.ts b/node_modules/react-native-phone-number-input/lib/index.d.ts
index cd625e5..ab051ba 100644
--- a/node_modules/react-native-phone-number-input/lib/index.d.ts
+++ b/node_modules/react-native-phone-number-input/lib/index.d.ts
@@ -1,11 +1,12 @@
-import { Component } from "react";
-import { TextInputProps, StyleProp, TextStyle, ViewStyle } from "react-native";
+import { Component, ReactElement } from "react";
+import { StyleProp, TextInputProps, TextStyle, ViewStyle } from "react-native";
 import {
-  CountryCode,
   CallingCode,
   Country,
+  CountryCode,
 } from "react-native-country-picker-modal";
 import { CountryFilterProps } from "react-native-country-picker-modal/lib/CountryFilter";
+export { Country, CountryCode } from "react-native-country-picker-modal";
 export interface PhoneInputProps {
   withDarkTheme?: boolean;
   withShadow?: boolean;
@@ -27,9 +28,12 @@ export interface PhoneInputProps {
   codeTextStyle?: StyleProp<TextStyle>;
   flagButtonStyle?: StyleProp<ViewStyle>;
   countryPickerButtonStyle?: StyleProp<ViewStyle>;
-  layout?: "first" | "second";
+  layout?: "first" | "second" | "third";
   filterProps?: CountryFilterProps;
   countryPickerProps?: any;
+  flagSize?: number;
+  drowDownImage?: ReactElement;
+  testIDCountryWithCode?: string;
 }
 export interface PhoneInputState {
   code: CallingCode | undefined;
@@ -304,4 +308,8 @@ export default class PhoneInput extends Component<
   render(): JSX.Element;
 }
 
-export function isValidNumber(number: string, countryCode: CountryCode ): boolean;
\ No newline at end of file
+export function isValidNumber(number: string, countryCode: CountryCode): boolean;
+export function isMobileNumber(number: string, countryCode: CountryCode): boolean;
+export function getFormattedNumber(number: string, countryCode: CountryCode): string | undefined;
+export function getRegionCodeAndNationalNumber(number: string): { regionCode: CountryCode, nationalNumber: string };
+
diff --git a/node_modules/react-native-phone-number-input/lib/index.js b/node_modules/react-native-phone-number-input/lib/index.js
index b89c388..f3151cf 100644
--- a/node_modules/react-native-phone-number-input/lib/index.js
+++ b/node_modules/react-native-phone-number-input/lib/index.js
@@ -1,13 +1,13 @@
+import { PhoneNumberFormat, PhoneNumberType, PhoneNumberUtil } from "google-libphonenumber";
 import React, { PureComponent } from "react";
-import { View, Text, TouchableOpacity, Image, TextInput } from "react-native";
+import { Image, Text, TextInput, TouchableOpacity, View } from "react-native";
 import CountryPicker, {
-  getCallingCode,
+  CountryModalProvider,
   DARK_THEME,
   DEFAULT_THEME,
-  CountryModalProvider,
   Flag,
+  getCallingCode,
 } from "react-native-country-picker-modal";
-import { PhoneNumberUtil } from "google-libphonenumber";
 import styles from "./styles";
 
 const dropDown =
@@ -119,7 +119,7 @@ export default class PhoneInput extends PureComponent {
 
   renderDropdownImage = () => {
     return (
-      <Image
+      this.props.drowDownImage ?? <Image
         source={{ uri: dropDown }}
         resizeMode="contain"
         style={styles.dropDownImage}
@@ -130,12 +130,12 @@ export default class PhoneInput extends PureComponent {
   renderFlagButton = (props) => {
     const { layout = "first", flagSize } = this.props;
     const { countryCode } = this.state;
-    if (layout === "first") {
+    if (layout === "first" || layout === "third") {
       return (
-        <Flag
+        <View style={styles.flag}><Flag
           countryCode={countryCode}
           flagSize={flagSize ? flagSize : DEFAULT_THEME.flagSize}
-        />
+        /></View>
       );
     }
     return <View />;
@@ -173,12 +173,13 @@ export default class PhoneInput extends PureComponent {
           <TouchableOpacity
             style={[
               styles.flagButtonView,
-              layout === "second" ? styles.flagButtonExtraWidth : {},
+              layout === "second" || layout === "third" ? styles.flagButtonExtraWidth : {},
               flagButtonStyle ? flagButtonStyle : {},
               countryPickerButtonStyle ? countryPickerButtonStyle : {},
             ]}
             disabled={disabled}
             onPress={() => this.setState({ modalVisible: true })}
+            testID={this.props.testIDCountryWithCode}
           >
             <CountryPicker
               onSelect={this.onSelect}
@@ -192,10 +193,12 @@ export default class PhoneInput extends PureComponent {
               visible={modalVisible}
               theme={withDarkTheme ? DARK_THEME : DEFAULT_THEME}
               renderFlagButton={this.renderFlagButton}
-              onClose={() => this.setState({ modalVisible: false })}
+              onClose={() => {
+                this.setState({ modalVisible: false })
+              }}
               {...countryPickerProps}
             />
-            {code && layout === "second" && (
+            {code && (layout === "second" || layout === "third") && (
               <Text
                 style={[styles.codeText, codeTextStyle ? codeTextStyle : {}]}
               >{`+${code}`}</Text>
@@ -230,6 +233,9 @@ export default class PhoneInput extends PureComponent {
               keyboardType="number-pad"
               autoFocus={autoFocus}
               {...textInputProps}
+              textAlignVertical="center"
+              blurOnSubmit={true}
+              testID={this.props.textInputProps.testID}
             />
           </View>
         </View>
@@ -241,8 +247,39 @@ export default class PhoneInput extends PureComponent {
 export const isValidNumber = (number, countryCode) => {
   try {
     const parsedNumber = phoneUtil.parse(number, countryCode);
-    return phoneUtil.isValidNumber(parsedNumber);
+    return phoneUtil.isValidNumberForRegion(parsedNumber, countryCode);
+  } catch (err) {
+    return false;
+  }
+};
+
+const validNumberTypes = [PhoneNumberType.MOBILE, PhoneNumberType.FIXED_LINE_OR_MOBILE];
+
+export const isMobileNumber = (number, countryCode) => {
+  try {
+    const parsedNumber = phoneUtil.parse(number, countryCode);
+    return validNumberTypes.includes(phoneUtil.getNumberType(parsedNumber));
   } catch (err) {
     return false;
   }
 };
+
+export const getFormattedNumber = (number, countryCode) => {
+  try {
+    const parsedNumber = phoneUtil.parse(number, countryCode);
+    return phoneUtil.format(parsedNumber, PhoneNumberFormat.INTERNATIONAL);
+  } catch (err) {
+    return undefined;
+  }
+};
+
+export const getRegionCodeAndNationalNumber = (number) => {
+  try {
+    const parsedNumber = phoneUtil.parse(number);
+    const regionCode = phoneUtil.getRegionCodeForNumber(parsedNumber);
+    const nationalNumber = parsedNumber.getNationalNumber()?.toString();
+    return { regionCode, nationalNumber };
+  } catch (err) {
+    return undefined;
+  }
+};
diff --git a/node_modules/react-native-phone-number-input/lib/styles.d.ts b/node_modules/react-native-phone-number-input/lib/styles.d.ts
index c6bd19e..4fc1080 100644
--- a/node_modules/react-native-phone-number-input/lib/styles.d.ts
+++ b/node_modules/react-native-phone-number-input/lib/styles.d.ts
@@ -46,5 +46,8 @@ declare const styles: {
         color: string;
         flex: number;
     };
+    flag: {
+        marginRight: number;
+    }
 };
 export default styles;
diff --git a/node_modules/react-native-phone-number-input/lib/styles.js b/node_modules/react-native-phone-number-input/lib/styles.js
index 1789ce7..ffa6d2c 100644
--- a/node_modules/react-native-phone-number-input/lib/styles.js
+++ b/node_modules/react-native-phone-number-input/lib/styles.js
@@ -1,4 +1,4 @@
-import {StyleSheet, Dimensions} from 'react-native';
+import {StyleSheet, Dimensions, Platform} from 'react-native';
 const {width: viewportWidth, height: viewportHeight} = Dimensions.get('window');
 function wp(percentage) {
   const value = (percentage * viewportWidth) / 100;
@@ -10,12 +10,12 @@ function hp(percentage) {
 }
 const styles = StyleSheet.create({
   container: {
-    width: wp(80),
+    // width: wp(80),
     backgroundColor: 'white',
     flexDirection: 'row',
   },
   flagButtonView: {
-    width: wp(20),
+    // width: wp(20),
     height: '100%',
     minWidth: 32,
     justifyContent: 'center',
@@ -23,7 +23,7 @@ const styles = StyleSheet.create({
     alignItems: 'center',
   },
   flagButtonExtraWidth: {
-    width: wp(23),
+    // width: wp(23),
   },
   shadow: {
     shadowColor: 'rgba(0,0,0,0.4)',
@@ -42,23 +42,27 @@ const styles = StyleSheet.create({
   textContainer: {
     flex: 1,
     backgroundColor: '#F8F9F9',
-    paddingHorizontal: wp(4),
-    paddingVertical: hp(2),
+    // paddingHorizontal: wp(4),
+    // paddingVertical: hp(2),
     textAlign: 'left',
     flexDirection: 'row',
     alignItems: 'center',
   },
   codeText: {
-    fontSize: 16,
+    // fontSize: 16,
     marginRight: 10,
-    fontWeight: '500',
-    color: '#000000',
+    // fontWeight: '500',
+    // color: '#000000',
   },
   numberText: {
-    fontSize: 16,
-    color: '#000000',
+    // fontSize: 16,
+    // color: '#000000',
     flex: 1,
+    top: Platform.select({ios: 1, android: undefined}),
   },
+  flag: { 
+    marginRight: -8
+  }
 });
 
 export default styles;
diff --git a/node_modules/react-native-phone-number-input/package.json b/node_modules/react-native-phone-number-input/package.json
index f4df944..1e123a8 100644
--- a/node_modules/react-native-phone-number-input/package.json
+++ b/node_modules/react-native-phone-number-input/package.json
@@ -31,7 +31,7 @@
     "android"
   ],
   "dependencies": {
-    "google-libphonenumber": "^3.2.10",
+    "google-libphonenumber": "3.2.32",
     "react-native-country-picker-modal": "^2.0.0"
   },
   "devDependencies": {
