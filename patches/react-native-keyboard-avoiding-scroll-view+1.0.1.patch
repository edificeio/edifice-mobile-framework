diff --git a/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingContainer.js b/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingContainer.js
index fadc258..fc833de 100644
--- a/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingContainer.js
+++ b/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingContainer.js
@@ -5,14 +5,22 @@ import { measureInWindow } from './utils/measureInWindow';
 import { hijackTextInputEvents } from './utils/hijackTextInputEvents';
 const { height: SCREEN_HEIGHT } = Dimensions.get('window');
 const KEYBOARD_PADDING = 48;
-export const KeyboardAvoidingContainer = genericMemo(({ stickyFooter, containerStyle, ScrollViewComponent, scrollViewRef, scrollViewProps, stickyFooterRef, stickyFooterProps, }) => {
+export const KeyboardAvoidingContainer = genericMemo(React.forwardRef(({ stickyFooter, containerStyle, ScrollViewComponent, scrollViewRef, scrollViewProps, stickyFooterRef, stickyFooterProps, }, forwardedRef) => {
+    const setRefs = React.useCallback((ref) => {
+        scrollViewRef.current = ref;
+        if (typeof forwardedRef === 'function') {
+            forwardedRef(ref);
+        } else if (typeof forwardedRef === 'object' && forwardedRef !== null) {
+            forwardedRef.current = ref;
+        }
+    }, []);
     return (<SafeAreaView style={[styles.container, containerStyle]}>
-        <ScrollViewComponent ref={scrollViewRef} {...scrollViewProps}/>
+        <ScrollViewComponent ref={setRefs} {...scrollViewProps}/>
         {stickyFooter && (<View ref={stickyFooterRef} {...stickyFooterProps}>
             {stickyFooter}
           </View>)}
       </SafeAreaView>);
-});
+}));
 export function useKeyboardAvoidingContainerProps({ stickyFooter, containerStyle, onScroll, contentContainerStyle: contentContainerStyleProp, style: styleProp, ...passthroughScrollViewProps }) {
     const scrollViewRef = useRef(null);
     const stickyFooterRef = useRef(null);
@@ -111,7 +119,7 @@ export function useKeyboardAvoidingContainerProps({ stickyFooter, containerStyle
             if (keyboardLayoutRef.current)
                 return;
             const { endCoordinates: newKeyboardLayout } = event;
-            const newFocusedTextInputNodeHandle = NativeTextInput.State.currentlyFocusedField();
+            const newFocusedTextInputNodeHandle = NativeTextInput.State.currentlyFocusedInput();
             const newStickyFooterNodeHandle = findNodeHandle(stickyFooterRef.current);
             const [newFocusedTextInputLayout, newStickyFooterLayout,] = await Promise.all([
                 newFocusedTextInputNodeHandle
diff --git a/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingFlatList.js b/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingFlatList.js
index 4887a6c..62ef887 100644
--- a/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingFlatList.js
+++ b/node_modules/react-native-keyboard-avoiding-scroll-view/dist/KeyboardAvoidingFlatList.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { FlatList } from 'react-native';
 import { KeyboardAvoidingContainer, useKeyboardAvoidingContainerProps, } from './KeyboardAvoidingContainer';
 import { generic } from './utils/react';
-export const KeyboardAvoidingFlatList = generic((props) => {
+export const KeyboardAvoidingFlatList = generic(React.forwardRef((props, ref) => {
     const KeyboardAvoidingContainerProps = useKeyboardAvoidingContainerProps(props);
-    return (<KeyboardAvoidingContainer {...KeyboardAvoidingContainerProps} ScrollViewComponent={FlatList}/>);
-});
+    return (<KeyboardAvoidingContainer ref={ref} {...KeyboardAvoidingContainerProps} ScrollViewComponent={FlatList}/>);
+}));
\ No newline at end of file
