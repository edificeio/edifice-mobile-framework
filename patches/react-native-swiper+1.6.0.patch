diff --git a/node_modules/react-native-swiper/src/index.js b/node_modules/react-native-swiper/src/index.js
index 3e63ca7..274c891 100644
--- a/node_modules/react-native-swiper/src/index.js
+++ b/node_modules/react-native-swiper/src/index.js
@@ -322,7 +322,7 @@ export default class extends Component {
     // contentOffset is not working in react 0.48.x so we need to use scrollTo
     // to emulate offset.
     if (this.initialRender && this.state.total > 1) {
-      this.scrollView.scrollTo({ ...offset, animated: false })
+      this.scrollView?.scrollTo({ ...offset, animated: false })
       this.initialRender = false
     }
 
@@ -330,7 +330,7 @@ export default class extends Component {
   }
 
   loopJump = () => {
-    if (!this.state.loopJump) return
+    if (!this.state.loopJump || !this.scrollView) return
     const i = this.state.index + (this.props.loop ? 1 : 0)
     const scrollView = this.scrollView
     this.loopJumpTimer = setTimeout(
@@ -531,7 +531,7 @@ export default class extends Component {
     if (state.dir === 'x') x = diff * state.width
     if (state.dir === 'y') y = diff * state.height
 
-    this.scrollView && this.scrollView.scrollTo({ x, y, animated })
+    this.scrollView?.scrollTo({ x, y, animated })
 
     // update scroll state
     this.internals.isScrolling = true
@@ -573,7 +573,7 @@ export default class extends Component {
     if (state.dir === 'x') x = diff * state.width
     if (state.dir === 'y') y = diff * state.height
 
-    this.scrollView && this.scrollView.scrollTo({ x, y, animated })
+    this.scrollView?.scrollTo({ x, y, animated })
 
     // update scroll state
     this.internals.isScrolling = true
